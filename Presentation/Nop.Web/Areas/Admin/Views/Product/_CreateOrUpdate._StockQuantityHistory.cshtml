@model ProductModel

<div class="panel-body">
    <p>
        @T("Admin.Catalog.Products.StockQuantityHistory.Hint")
    </p>
    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.ProductDetailsStockQuantityHistoryTop, additionalData = Model })
    @*hide the entire search block if no elements are displayed*@
    <div class="sub-panel" @(Model.StockQuantityHistorySearchModel.AvailableWarehouses.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
        <div class="form-group" @(Model.StockQuantityHistorySearchModel.AvailableWarehouses.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
            <div class="col-md-3">
                <nop-label asp-for="StockQuantityHistorySearchModel.WarehouseId" />
            </div>
            <div class="col-md-9">
                <nop-select asp-for="StockQuantityHistorySearchModel.WarehouseId" asp-items="Model.StockQuantityHistorySearchModel.AvailableWarehouses" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-3">
                <button type="button" id="search-stock-quantity-history" class="btn btn-primary btn-search">
                    <i class="fa fa-search"></i>
                    @T("Admin.Common.Search")
                </button>
            </div>
        </div>
    </div>

    <div class="sub-panel">
        <div id="stock-quantity-history-grid"></div>

        <script>
            $(document).ready(function() {
                $("#stock-quantity-history-grid").kendoGrid({
                    dataSource: {
                        type: "json",
                        transport: {
                            read: {
                                url: "@Html.Raw(Url.Action("StockQuantityHistory", "Product"))",
                                type: "POST",
                                dataType: "json",
                                data: function additionalData() {
                                    var data = {
                                        ProductId: '@(Model.Id)',
                                        WarehouseId: $('#@Html.IdFor(model => model.StockQuantityHistorySearchModel.WarehouseId)').val()
                                    };
                                    addAntiForgeryToken(data);
                                    return data;
                                }
                            }
                        },
                        schema: {
                            data: "Data",
                            total: "Total",
                            errors: "Errors"
                        },
                        error: function(e) {
                            display_kendoui_grid_error(e);
                            // Cancel the changes
                            this.cancelChanges();
                        },
                        pageSize: @(Model.StockQuantityHistorySearchModel.PageSize),
                        serverPaging: true,
                        serverFiltering: true,
                        serverSorting: true
                    },
                    pageable: {
                        refresh: true,
                        pageSizes: [@(Model.StockQuantityHistorySearchModel.AvailablePageSizes)],
                        @await Html.PartialAsync("_GridPagerMessages")
                    },
                    scrollable: false,
                    columns: [
                        {
                            field: "WarehouseName",
                            title: "@T("Admin.Catalog.Products.StockQuantityHistory.Fields.Warehouse")",
                            width: 200
                        }, {
                            field: "AttributeCombination",
                            title: "@T("Admin.Catalog.Products.StockQuantityHistory.Fields.Combination")",
                            width: 220,
                            encoded: false
                        }, {
                            field: "QuantityAdjustment",
                            title: "@T("Admin.Catalog.Products.StockQuantityHistory.Fields.QuantityAdjustment")",
                            width: 150,
                            template: '# if(QuantityAdjustment > 0) { # +#=QuantityAdjustment# # } else { # #=QuantityAdjustment# # } #'
                        }, {
                            field: "StockQuantity",
                            title: "@T("Admin.Catalog.Products.StockQuantityHistory.Fields.StockQuantity")",
                            width: 130
                        }, {
                            field: "Message",
                            title: "@T("Admin.Catalog.Products.StockQuantityHistory.Fields.Message")"
                        }, {
                            field: "CreatedOn",
                            title: "@T("Admin.Catalog.Products.StockQuantityHistory.Fields.CreatedOn")",
                            type: "date",
                            format: "{0:G}",
                            width: 170
                        }
                    ]
                });
            });
        </script>

        <script>
            $(document).ready(function() {
                $('#search-stock-quantity-history').click(function() {
                    $('#stock-quantity-history-grid').data('kendoGrid').dataSource.page(1);
                    return false;
                });
            });
        </script>
    </div>
    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.ProductDetailsStockQuantityHistoryBottom, additionalData = Model })
</div>