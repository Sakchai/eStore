@model ProductTemplateSearchModel

<nop-antiforgery-token />
<div class="panel-body">
    <div class="panel-group">
        @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.ProductTemplateListButtons })

        <div id="templates-product-grid"></div>

        <script>
            $(document).ready(function () {
                $("#templates-product-grid").kendoGrid({
                    dataSource: {
                        type: "json",
                        transport: {
                            read: {
                                url: "@Html.Raw(Url.Action("ProductTemplates", "Template"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            },
                            create: {
                                url: "@Html.Raw(Url.Action("ProductTemplateAdd", "Template"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            },
                            update: {
                                url: "@Html.Raw(Url.Action("ProductTemplateUpdate", "Template"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            },
                            destroy: {
                                url: "@Html.Raw(Url.Action("ProductTemplateDelete", "Template"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            }
                        },
                        schema: {
                            data: "Data",
                            total: "Total",
                            errors: "Errors",
                            model: {
                                id: "Id",
                                fields: {
                                    Name: { editable: true, type: "string" },
                                    ViewPath: { editable: true, type: "string" },
                                    DisplayOrder: { editable: true, type: "number" },
                                    IgnoredProductTypes: { editable: true, type: "string" },
                                    Id: { editable: false, type: "number" }
                                }
                            }
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update") {
                                this.read();
                            }
                        },
                        error: function (e) {
                            display_kendoui_grid_error(e);
                            // Cancel the changes
                            this.cancelChanges();
                        },
                        pageSize: @(Model.PageSize),
                        serverPaging: true,
                        serverFiltering: true,
                        serverSorting: true
                    },
                    pageable: {
                        refresh: true,
                        pageSizes: [@(Model.AvailablePageSizes)],
                        @await Html.PartialAsync("_GridPagerMessages")
                    },
                    toolbar: [{ name: "create", text: "@T("Admin.Common.AddNewRecord")" }],
                    editable: {
                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                        mode: "inline"
                    },
                    scrollable: false,
                    columns: [{
                        field: "Name",
                        title: "@T("Admin.System.Templates.Product.Name")",
                        width: 300
                    }, {
                        field: "ViewPath",
                        title: "@T("Admin.System.Templates.Product.ViewPath")",
                        width: 300
                    }, {
                        field: "DisplayOrder",
                        title: "@T("Admin.System.Templates.Product.DisplayOrder")",
                        //integer format
                        format: "{0:0}",
                        width: 100
                    }, {
                        field: "IgnoredProductTypes",
                        title: "@T("Admin.System.Templates.Product.IgnoredProductTypes")",
                        width: 300
                    }, {
                        command: [{
                            name: "edit",
                            text: {
                                edit: "@T("Admin.Common.Edit")",
                                update: "@T("Admin.Common.Update")",
                                cancel: "@T("Admin.Common.Cancel")"
                            }
                        }, {
                            name: "destroy",
                            text: "@T("Admin.Common.Delete")"
                        }],
                        width: 200
                    }]
                });
            });
        </script>
    </div>
</div>