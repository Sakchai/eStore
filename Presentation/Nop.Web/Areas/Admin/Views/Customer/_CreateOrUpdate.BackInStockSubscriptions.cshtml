@model CustomerModel

@using Nop.Services.Stores
@inject IStoreService storeService
@{
    var stores = storeService.GetAllStores();
}

<div class="panel-body">
    <div id="backinstock-subscriptions-grid"></div>
    <script>
        $(document).ready(function () {
            $("#backinstock-subscriptions-grid").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "@Html.Raw(Url.Action("BackInStockSubscriptionList", "Customer"))",
                            type: "POST",
                            dataType: "json",
                            data: function() {
                                var data = {
                                    CustomerId: '@(Model.Id)'
                                };
                                addAntiForgeryToken(data);
                                return data;
                            }
                        }
                    },
                    schema: {
                        data: "Data",
                        total: "Total",
                        errors: "Errors"
                    },
                    error: function(e) {
                        display_kendoui_grid_error(e);
                        // Cancel the changes
                        this.cancelChanges();
                    },
                    pageSize: @(Model.CustomerBackInStockSubscriptionSearchModel.PageSize),
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true
                },
                pageable: {
                    refresh: true,
                    pageSizes: [@(Model.CustomerBackInStockSubscriptionSearchModel.AvailablePageSizes)],
                    @await Html.PartialAsync("_GridPagerMessages")
                },
                editable: {
                    confirmation: "@T("Admin.Common.DeleteConfirmation")",
                    mode: "inline"
                },
                scrollable: false,
                columns: [{
                    field: "StoreName",
                    hidden: @(stores.Count > 1 ? "false" : "true"),
                    title: "@T("Admin.Customers.Customers.BackInStockSubscriptions.Store")",
                    width: 200,
                }, {
                    field: "ProductId",
                    title: "@T("Admin.Customers.Customers.BackInStockSubscriptions.Product")",
                    width: 300,
                    template: '<a href="@Url.Content("~/Admin/Product/Edit/")#=ProductId#">#:ProductName#</a>'
                },{
                    field: "CreatedOn",
                    title: "@T("Admin.Customers.Customers.BackInStockSubscriptions.CreatedOn")",
                    width: 200,
                    type: "date",
                    format: "{0:G}"
                }]
            });
        });
    </script>
</div>
