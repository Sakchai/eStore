using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace Nop.Plugin.Payments.Worldpay.Domain.Models
{
    /// <summary>
    /// Represents a base payment plan.
    /// </summary>
    public abstract class PaymentPlan
    {
        /// <summary>
        /// Gets or sets a plan identifier. Auto-generated by the system and given to the merchant when the plan is added.
        /// </summary>
        [JsonProperty("planId")]
        public int PlanId { get; set; }

        /// <summary>
        /// Gets or sets a plan start date.
        /// </summary>
        [JsonProperty("planStartDate")]
        public DateTime? PlanStartDate { get; set; }

        /// <summary>
        /// Gets or sets a plan end date.
        /// </summary>
        [JsonProperty("planEndDate")]
        public DateTime? PlanEndDate { get; set; }

        /// <summary>
        /// Gets or sets a plan start date.
        /// </summary>
        [JsonProperty("startDate")]
        public DateTime? StartDate { get; set; }

        /// <summary>
        /// Gets or sets a plan end date.
        /// </summary>
        [JsonProperty("endDate")]
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or sets a primary payment method to be used for billing.
        /// </summary>
        [JsonProperty("primaryPaymentMethodId")]
        public string PrimaryPaymentMethodId { get; set; }

        /// <summary>
        /// Gets or sets a secondary payment method to be used for billing.
        /// </summary>
        [JsonProperty("secondaryPaymentMethodId")]
        public string SecondaryPaymentMethodId { get; set; }

        /// <summary>
        /// Gets or sets a next payment date for the plan.
        /// </summary>
        [JsonProperty("nextPaymentDate")]
        public DateTime? NextPaymentDate { get; set; }

        /// <summary>
        /// Gets or sets custom user-defined fields tied to the plan, which can be used for reporting purposes.
        /// </summary>
        [JsonProperty("userDefinedFields")]
        public IList<KeyValuePair<string, string>> UserDefinedFields { get; set; }

        /// <summary>
        /// Gets or sets a value indicating  whether the plan is active.
        /// </summary>
        [JsonProperty("active")]
        public bool IsActive { get; set; }

        /// <summary>
        /// Gets or sets a number of times to retry billing if payment is declined.
        /// </summary>
        [JsonProperty("maxRetries")]
        public int MaxRetries { get; set; }

        /// <summary>
        /// Gets or sets notes associated with the plan.
        /// </summary>
        [JsonProperty("notes")]
        public string Notes { get; set; }

        /// <summary>
        /// Gets or sets a description in addition to the merchants DBA.
        /// </summary>
        [JsonProperty("softDescriptor")]
        public string SoftDescriptor { get; set; }

        /// <summary>
        /// Gets or sets a 4 characters dynamic merchant category code.
        /// </summary>
        [JsonProperty("dynamicMCC")]
        public string DynamicMerchantCategory { get; set; }
    }
}