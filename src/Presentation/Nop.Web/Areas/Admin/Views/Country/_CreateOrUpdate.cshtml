@model CountryModel

@{
    const string hideInfoBlockAttributeName = "CountryPage.HideInfoBlock";
    var hideInfoBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideInfoBlockAttributeName);

    const string hideStatesBlockAttributeName = "CountryPage.HideStatesBlock";
    var hideStatesBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideStatesBlockAttributeName, defaultValue: true);
}

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <nop-cards id="country-cards">
                <nop-card asp-name="country-info" asp-icon="fas fa-info" asp-title="@T("Admin.Configuration.Countries.Info")" asp-hide-block-attribute-name="@hideInfoBlockAttributeName" asp-hide="@hideInfoBlock" asp-advanced="false">@await Html.PartialAsync("_CreateOrUpdate.Info", Model)</nop-card>
                <nop-card asp-name="country-states" asp-icon="fas fa-globe" asp-title="@T("Admin.Configuration.Countries.States")" asp-hide-block-attribute-name="@hideStatesBlockAttributeName" asp-hide="@hideStatesBlock" asp-advanced="false">@await Html.PartialAsync("_CreateOrUpdate.States", Model)</nop-card>

                @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CountryDetailsBlock, additionalData = Model })
            </nop-cards>
        </div>
    </div>
</section>