@model ForumSettingsModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.Configuration.Settings.Forums").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Forums settings");
}

@{
    const string hideCommonBlockAttributeName = "ForumSettingsPage.HideCommonBlock";
    var hideCommonBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideCommonBlockAttributeName);

    const string hidePermissionsBlockAttributeName = "ForumSettingsPage.HidePermissionsBlock";
    var hidePermissionsBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hidePermissionsBlockAttributeName);

    const string hidePageSizesBlockAttributeName = "ForumSettingsPage.HidePageSizesBlock";
    var hidePageSizesBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hidePageSizesBlockAttributeName);

    const string hideFeedsBlockAttributeName = "ForumSettingsPage.HideFeedsBlock";
    var hideFeedsBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideFeedsBlockAttributeName);
}

<form asp-controller="Setting" asp-action="Forum" method="post">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Admin.Configuration.Settings.Forums")
        </h1>
        <div class="float-right">
            <button type="submit" name="save" class="btn btn-primary">
                <i class="far fa-save"></i>
                @T("Admin.Common.Save")
            </button>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.ForumSettingsButtons })
        </div>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                @await Component.InvokeAsync("StoreScopeConfiguration")
                @await Component.InvokeAsync("SettingMode")
                <div asp-validation-summary="All"></div>

                <nop-cards id="forumsettings-cards">
                    <nop-card asp-name="forumsettings-common" asp-icon="fas fa-info" asp-title="@T("Admin.Configuration.Settings.Forums.BlockTitle.Common")" asp-hide-block-attribute-name="@hideCommonBlockAttributeName" asp-hide="@hideCommonBlock" asp-advanced="false">@await Html.PartialAsync("_Forum.Common", Model)</nop-card>
                    <nop-card asp-name="forumsettings-permissions" asp-icon="fas fa-shield-alt" asp-title="@T("Admin.Configuration.Settings.Forums.BlockTitle.Permissions")" asp-hide-block-attribute-name="@hidePermissionsBlockAttributeName" asp-hide="@hidePermissionsBlock" asp-advanced="false">@await Html.PartialAsync("_Forum.Permissions", Model)</nop-card>
                    <nop-card asp-name="forumsettings-page-sizes" asp-icon="fas fa-file" asp-title="@T("Admin.Configuration.Settings.Forums.BlockTitle.PageSizes")" asp-hide-block-attribute-name="@hidePageSizesBlockAttributeName" asp-hide="@hidePageSizesBlock" asp-advanced="true">@await Html.PartialAsync("_Forum.PageSizes", Model)</nop-card>
                    <nop-card asp-name="forumsettings-feeds" asp-icon="fas fa-rss" asp-title="@T("Admin.Configuration.Settings.Forums.BlockTitle.Feeds")" asp-hide-block-attribute-name="@hideFeedsBlockAttributeName" asp-hide="@hideFeedsBlock" asp-advanced="true">@await Html.PartialAsync("_Forum.Feeds", Model)</nop-card>

                    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.ForumSettingsDetailsBlock, additionalData = Model })
                </nop-cards>

                <script>
                $(document).ready(function () {
                    $("#@Html.IdFor(model => model.AllowPostVoting)").click(toggleAllowVoting);
                    $("#@Html.IdFor(model => model.AllowPrivateMessages)").click(toggleAllowPrivateMessages);
                    $("#@Html.IdFor(model => model.ForumFeedsEnabled)").click(toggleForumFeedsEnabled);
                    $("#@Html.IdFor(model => model.ActiveDiscussionsFeedEnabled)").click(toggleActiveDiscussionsFeedEnabled);
                    toggleAllowVoting();
                    toggleAllowPrivateMessages();
                    toggleForumFeedsEnabled();
                    toggleActiveDiscussionsFeedEnabled();
                });

                function toggleAllowVoting() {
                    if ($('#@Html.IdFor(model => model.AllowPostVoting)').is(':checked')) {
                        $('#pnlMaxVotes').showField();
                    }
                    else {
                        $('#pnlMaxVotes').hide();
                    }
                }

                function toggleAllowPrivateMessages() {
                    if ($('#@Html.IdFor(model => model.AllowPrivateMessages)').is(':checked')) {
                        $('#pnlShowAlertForPM').showField();
                        $('#pnlNotifyAboutPrivateMessages').showField();
                    }
                    else {
                        $('#pnlShowAlertForPM').hide();
                        $('#pnlNotifyAboutPrivateMessages').hide();
                    }
                }

                function toggleForumFeedsEnabled() {
                    if ($('#@Html.IdFor(model => model.ForumFeedsEnabled)').is(':checked')) {
                        $('#pnlForumFeedCount').showField();
                    }
                    else {
                        $('#pnlForumFeedCount').hide();
                    }
                }

                function toggleActiveDiscussionsFeedEnabled() {
                    if ($('#@Html.IdFor(model => model.ActiveDiscussionsFeedEnabled)').is(':checked')) {
                        $('#pnlActiveDiscussionsFeedCount').showField();
                    }
                    else {
                        $('#pnlActiveDiscussionsFeedCount').hide();
                    }
                }
            </script>
        </div>
    </div>
</form>